################################################################
## Packages / Telegram
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'telegram'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Automation
    ################################################

    automation.forward_persistent_notifications:
      <<: *customize
      friendly_name: "Forward Persistent Notifications"
      icon: mdi:message-text

#    automation.telegram_restart:
#      <<: *customize
#      friendly_name: "Telegram: Restart"
#      icon: mdi:power

#    automation.telegram_roll:
#      <<: *customize
#      friendly_name: "Telegram: Roll"
#      icon: mdi:dice-multiple

################################################
## Automation
################################################

automation:
  - alias: forward_persistent_notifications
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: persistent_notification
          service: create
    action:
      - service: notify.telegram_house
        data_template:
          message: >-
            {% set message = "{trigger.event.data.service_data.title}:{trigger.event.data.service_data.message}" %}
            {{ message }}

#  - alias: telegram_restart
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/restart'
#    action:
#      - service: notify.telegram_house
#        data:
#          message: "Restarting Home Assistant, please wait..."
#      - service: homeassistant.restart
#
#  - alias: telegram_roll
#    trigger:
#      - platform: event
#        event_type: telegram_command
#        event_data:
#          command: '/roll'
#    action:
#      - service: notify.telegram_house
#        data_template:
#          message: >-
#            {% set sides = (trigger.event.data.args|default)[0]|default(6) %}
#            I rolled a {{ sides|string ~ '-sided die' if sides != 6 else 'die' }} and got {{ range(1, sides + 1)|random }}.

################################################
## Telegram Bot
################################################

#telegram_bot:
#  platform: webhooks
#  api_key: !secret telegram_api_key
#  allowed_chat_ids:
#    - !secret telegram_chat_id

telegram_bot:
  platform: polling
  api_key: !secret telegram_api_key
  allowed_chat_ids:
    - !secret telegram_chat_id_me
    - !secret telegram_chat_id_us


################################################
## Notify
################################################

notify:
  - platform: telegram
    name: telegram_house
    chat_id: !secret telegram_chat_id_us

  - platform: telegram
    name: telegram_me
    chat_id: !secret telegram_chat_id_me
