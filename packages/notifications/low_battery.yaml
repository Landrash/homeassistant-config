################################################################
## Packages / Notification Low Battery
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'notification_low_battery'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Sensors
    ################################################

    sensor.low_battery:
      <<: *customize
      friendly_name: "Low Battery Sensor"

################################################
## Sensor
################################################

sensor:
- platform: template
  sensors:
    low_battery:
      friendly_name: "Low Battery"
      value_template: >
        {%- set threshold = 15 -%}
        {%- set domains = ['light', 'lock', 'plant', 'sensor', 'switch', 'vacuum' 'zwave'] -%}
        {%- for domain in domains -%}
        {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
            {{ item.attributes.friendly_name }}{%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
        {%- endfor -%}

################################################
## Notification
################################################
automation:
  - alias: 'Battery Alert'
    trigger:
      - platform: time
        at: '10:00:00'
      - platform: time
        at: '18:00:00'
    condition:
      condition: template
      value_template: "{% if states('sensor.low_battery') %}true{% endif %}"
    action:
      - service: persistent_notification.create
        data_template:
          title: Low Battery
          message: "{{ states('sensor.low_battery') }}"
          notification_id: low-battery-alert
