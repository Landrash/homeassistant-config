################################################################
## Packages / Notification Low Battery
################################################################

################################################
## Customize
################################################

homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'notification_utility'

      expose: &expose
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

    ################################################
    ## Automation
    ################################################

    automation.forward_persistent_notifications:
      <<: *customize
      friendly_name: "Forward Persistent Notifications"
      icon: mdi:message-text

    automation.startup_notification:
      <<: *customize
      friendly_name: "Startup Notification"
      icon: mdi:message-text

    automation.update_notification:
      <<: *customize
      friendly_name: "Update Notification"
      icon: mdi:message-text

    ################################################
    ## Sensors
    ################################################

    sensor.low_battery:
      <<: *customize
      friendly_name: "Low Battery Sensor"
      hidden: true

################################################
## Sensor
################################################

sensor:
- platform: template
  sensors:
    low_battery:
      friendly_name: "Low Battery"
      value_template: >
        {%- set threshold = 15 -%}
        {%- set domains = ['light', 'lock', 'plant', 'sensor', 'switch', 'vacuum' 'zwave'] -%}
        {%- for domain in domains -%}
        {%- for item in states[domain] if ((item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold) or ("battery" in item.name | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
            {{ item.attributes.friendly_name }}{%- if not loop.last %}, {% endif -%}
        {%- endfor -%}
        {%- endfor -%}

################################################
## Notification
################################################
automation:
  - alias: 'Battery Alert'
    trigger:
      - platform: time
        at: '08:00:00'
      - platform: time
        at: '16:00:00'
    condition:
      condition: template
      value_template: "{% if states('sensor.low_battery') %}true{% endif %}"
    action:
      - service: persistent_notification.create
        data_template:
          title: '\ud83d\udd0b Low Battery'
          message: "{{ states('sensor.low_battery') }}"
          notification_id: low-battery-alert

  - alias: forward_persistent_notifications
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: persistent_notification
          service: create
    action:
      - service: notify.telegram_house
        data_template:
          title: >-
            {% set title = trigger.event.data.service_data.title %}
            {{ title }}
          message: >-
            {% set message = trigger.event.data.service_data.message %}
            {{ message }}

  - alias: startup_notification
    initial_state: 'on'
    trigger:
      - platform: homeassistant
        event: start
      - platform: time
        seconds: '/10'
    action:
      - service: automation.turn_off
        data:
          entity_id: automation.startup_notification
      - service: notify.telegram_house
        data_template:
          message: >-
            {% set message = [
              "\ud83c\udfe1 Home Assistant was restarted at {{ as_timestamp(now()) | timestamp_custom('%H:%M', true) }}",
              "\ud83c\udfe1 Home Assistant online at {{ as_timestamp(now()) | timestamp_custom('%H:%M', true) }}"
            ] %}
            {{ message|random }}
  - alias: update_notification
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.ha_github_version
      - platform: state
        entity_id: sensor.ha_pypi_version
    condition:
      - condition: template
        value_template: >-
          {{ trigger.to_state.state }}
      - condition: template
        value_template: >-
          {{ trigger.to_state.state != states('sensor.ha_version') }}
      - condition: template
        value_template: >-
          {{ trigger.to_state.state != 'unknown' }}
    action:
      - service: notify.telegram_house
        data_template:
          message: >-
            "\u2618 Home Assistant {{ trigger.to_state.state }} is now available on {{ trigger.to_state.name.split(' ')[0] }}."
